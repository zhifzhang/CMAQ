       SUBROUTINE OPTICS_WATER_CLOUD(CLOUD_RADIUS_LIQUID, WC_EXT, WC_ASF, WC_SSA)

         USE BIN_DATA
         USE CSQY_PARAMETERS

         IMPLICIT NONE

         REAL, INTENT( IN )  :: CLOUD_RADIUS_LIQUID ! cloud liquid droplet radii, um
         REAL, INTENT( OUT ) :: WC_EXT( : )         ! (cloud extinction coef)/LWC, 1/m*/(g/m**3)
         REAL, INTENT( OUT ) :: WC_ASF( : )         !  cloud asymmetry factor
         REAL, INTENT( OUT ) :: WC_SSA( : )         !  cloud coalbedo

         INTEGER, PARAMETER :: IUNIT  = 155
         INTEGER, PARAMETER :: DATA_UNIT = 156
         INTEGER, PARAMETER :: mxcof  = 3
         INTEGER, PARAMETER :: mxsiz  = 3
         INTEGER, PARAMETER :: mxwvwc = 74

         INTEGER icof, isize, ivwc, lc, nlyr, nstring
         INTEGER wclyr
         LOGICAL, SAVE ::  FIRST = .TRUE.
         LOGICAL       ::  FIRST_LINE, NEWSIZ
         LOGICAL, SAVE ::  READ_DATA  = .FALSE.
         LOGICAL, SAVE ::  WRITE_DATA = .FALSE.

         REAL, SAVE ::  CL_ASY(MXSIZ,MXWVWC,MXCOF), CL_EXT(MXSIZ,MXWVWC,MXCOF),
     &                  CL_SSA(MXSIZ,MXWVWC,MXCOF), WCWVN(MXWVWC), COEFFS( MXWVWC )
         REAL( 8 )  ::  WREXT_COEFFS( MXWVWC )

         REAL       ::  CLOUD_LIQ_EXT( MXWVWC ), CLOUD_LIQ_SSA( MXWVWC ), 
     &                  CLOUD_LIQ_ASF( MXWVWC ) 

         REAL, SAVE :: RADBIN_LOWER( MXSIZ ), RADBIN_UPPER( MXSIZ )


         CHARACTER( 1)   CHAR
         CHARACTER(19)   FILENM    ! No. of characters must equal
                                   ! length of filename.

         CHARACTER(100) FULLNAME, LINE

         REAL BASYD, BEXTD, BSSAD,
     &        DELTAZ, EX_V1, EX_V2, EX_V1_L1, EX_V1_L2,
     &        EX_V2_L1, EX_V2_L2, GG_V1, GG_V2, GG_V1_L1, GG_V1_L2,
     &        GG_V2_L1, GG_V2_L2, SS_V1, SS_V2, SS_V1_L1, SS_V1_L2,
     &        SS_V2_L1, SS_V2_L2, SPREC, SSALBD, LAMBDA, WAVLEN

         REAL AVG1, AVG2, REFF_AVG1, REFF_AVG2

         REAL, ALLOCATABLE, SAVE :: WAVE( : ), XDUMB( : ), YDUMB( : ), ZDUMB( : )
         REAL                      :: FACTOR
         INTEGER                   :: NDUMB
         REAL, ALLOCATABLE, SAVE :: WAVE_OUTL( : ), WAVE_OUTU( : ), WAVE_OUTC( : )

         REAL, ALLOCATABLE, SAVE ::  NEW_CL_ASY(:, :, :), NEW_CL_EXT(:, :, :),
     &                                NEW_CL_SSA(:, :, :)
     
         INTEGER                  :: I, J, K
         INTEGER, SAVE            :: I_CUTTOFF



      DATA WCWVN /
     O     2.9000E+02, 3.1400E+02, 3.4400E+02, 3.7900E+02, 4.1900E+02,
     +     4.5900E+02, 4.9900E+02, 5.4400E+02, 6.0300E+02, 6.6400E+02,
     1     7.1900E+02, 7.6600E+02, 8.2100E+02, 9.2900E+02, 1.0460E+03,
     +     1.1420E+03, 1.2320E+03, 1.3930E+03, 1.5870E+03, 1.8550E+03,
     2     2.2470E+03, 2.6180E+03, 3.1450E+03, 3.6900E+03, 3.9000E+03,
     +     4.1000E+03, 4.3000E+03, 4.5000E+03, 4.7000E+03, 4.9000E+03,
     3     5.1000E+03, 5.3000E+03, 5.4000E+03, 5.5000E+03, 5.7000E+03,
     +     5.9000E+03, 6.0000E+03, 6.1000E+03, 6.2000E+03, 6.3000E+03,
     4     6.5000E+03, 6.7000E+03, 7.0000E+03, 7.1000E+03, 7.3000E+03,
     +     7.6000E+03, 8.0000E+03, 8.6000E+03, 9.0000E+03, 9.6000E+03,
     5     1.0000E+04, 1.0500E+04, 1.1000E+04, 1.1500E+04, 1.2500E+04,
     +     1.3500E+04, 1.4000E+04, 1.4500E+04, 1.5000E+04, 1.5500E+04,
     6     1.6500E+04, 1.7000E+04, 1.7500E+04, 1.8000E+04, 1.9000E+04,
     +     2.0000E+04, 2.5000E+04, 3.2000E+04, 4.0000E+04, 5.0000E+04,
     7     6.0000E+04, 8.0000E+04, 1.0000E+05, 1.5000E+05/

      DATA ( CL_ASY(   1, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O     1.1100E-01,-8.0600E-02,-8.2900E-02,-6.7500E-02,-9.9800E-02,
     +    -1.0900E-01,-1.1500E-01,-1.2400E-01,-1.2400E-01,-1.3700E-01,
     1    -1.4100E-01,-2.3100E-01,-1.7100E-01,-1.8600E-01,-2.1300E-01,
     +    -3.1400E-01,-3.7400E-01,-4.6100E-01,-5.8200E-01,-3.5800E-01,
     2     5.9800E-03, 4.0600E-08,-2.8500E-01, 1.8000E-03, 3.9000E-08,
     +     1.2500E-08, 9.5400E-09, 7.3900E-09, 1.7500E+01, 1.7200E+00,
     3     2.8000E-01,-6.5200E-01,-4.1600E-03,-4.3700E-04,-5.2300E+01,
     +    -9.7000E-01,-5.5900E-01,-4.2300E-01,-3.3600E-01,-3.8400E-01,
     4    -6.2100E-01,-1.8800E+01,-4.0200E+01,-4.0100E+01,-2.7900E+01,
     +    -1.3400E+01,-6.3000E+00,-3.1700E+00,-2.3000E+00,-3.2400E+00,
     5    -1.8400E+00,-1.7600E+00,-1.8500E+00,-2.0200E+00,-2.2400E+00,
     +    -2.4000E+00,-2.4600E+00,-2.5100E+00,-2.5300E+00,-2.5600E+00,
     6    -2.5700E+00,-2.5800E+00,-2.5700E+00,-2.5600E+00,-2.5300E+00,
     +    -2.5100E+00,-2.3800E+00,-2.2700E+00,-7.7900E+01, 2.7300E-01,
     7     7.0700E-02, 2.4700E-02, 7.5300E-03, 9.8700E-04/

      DATA ( CL_ASY(   1, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O     9.4000E-02,-7.6200E-01,-6.8800E-01,-6.1200E-01,-8.0000E-01,
     +    -7.2400E-01,-7.5600E-01,-7.8200E-01,-6.0200E-01,-6.7600E-01,
     1    -6.9400E-01,-1.2300E+00,-8.2600E-01,-8.2400E-01,-8.0000E-01,
     +    -1.2000E+00,-1.2500E+00,-1.3100E+00,-1.3900E+00,-6.4000E-01,
     2     1.1000E+00, 5.4400E+00,-6.5600E-01, 1.6700E+00, 5.6800E+00,
     +     6.0000E+00, 6.0000E+00, 6.0000E+00,-4.8800E+00,-3.0500E+00,
     3    -1.5100E+00, 4.0000E-02, 9.8600E-01, 1.7600E+00,-6.0000E+00,
     +    -2.1000E+00,-1.3600E+00,-1.0400E+00,-4.0000E-01,-2.1800E-01,
     4    -1.9000E+00,-4.5500E+00,-5.0000E+00,-4.9300E+00,-4.5800E+00,
     +    -3.9200E+00,-3.2100E+00,-2.5000E+00,-2.1100E+00,-2.4400E+00,
     5    -1.7100E+00,-1.5500E+00,-1.5000E+00,-1.5000E+00,-1.5000E+00,
     +    -1.4800E+00,-1.4600E+00,-1.4400E+00,-1.4200E+00,-1.4000E+00,
     6    -1.3500E+00,-1.3200E+00,-1.2900E+00,-1.2600E+00,-1.2100E+00,
     +    -1.1500E+00,-9.3600E-01,-5.4800E-01,-6.0000E-03, 5.4000E-01,
     7     8.8400E-01, 1.1500E+00, 1.4800E+00, 1.9900E+00/

      DATA ( CL_ASY(   1, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O     7.3000E-01, 8.8300E-01, 8.8400E-01, 8.8200E-01, 8.8200E-01,
     +     8.8600E-01, 8.8500E-01, 8.8500E-01, 8.9400E-01, 8.9000E-01,
     1     8.8900E-01, 8.7500E-01, 8.8300E-01, 8.8400E-01, 8.8700E-01,
     +     8.7100E-01, 8.7100E-01, 8.7100E-01, 8.7000E-01, 9.2500E-01,
     2     7.6600E-01, 8.6100E-01, 1.0100E+00, 7.5600E-01, 7.7400E-01,
     +     7.8800E-01, 8.0400E-01, 8.2100E-01, 8.2700E-01, 8.2400E-01,
     3     8.1700E-01, 1.5500E+00, 8.7600E-01, 8.6700E-01, 8.7500E-01,
     +     9.2300E-01, 9.5900E-01, 9.6700E-01, 1.0500E+00, 1.1300E+00,
     4     8.8300E-01, 8.6700E-01, 8.6900E-01, 8.7100E-01, 8.7400E-01,
     +     8.8000E-01, 8.8900E-01, 9.0500E-01, 9.2000E-01, 8.8400E-01,
     5     9.4700E-01, 9.7200E-01, 9.8200E-01, 9.8400E-01, 9.7500E-01,
     +     9.6300E-01, 9.5700E-01, 9.5400E-01, 9.5200E-01, 9.5100E-01,
     6     9.5100E-01, 9.5200E-01, 9.5300E-01, 9.5500E-01, 9.6100E-01,
     +     9.7100E-01, 1.0300E+00, 1.3200E+00, 7.7500E+01,-4.7000E-01,
     7    -1.6500E-01,-7.2000E-02,-2.6200E-02,-6.7200E-04/

      DATA ( CL_ASY(   2, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O    -3.1500E-01,-8.4300E-02,-9.0800E-02,-1.6300E-01,-1.0200E-01,
     +    -1.1100E-01,-1.0900E-01,-1.2000E-01,-1.3300E-01,-1.5500E-01,
     1    -1.5700E-01,-1.1500E-01,-1.6700E-01,-1.7400E-01,-2.1200E-01,
     +    -2.0800E-01,-2.0600E-01,-2.1900E-01,-2.3800E-01,-2.5100E-01,
     2    -3.0100E-01,-6.5600E-01,-3.2000E+00,-6.0800E-01,-6.0100E-01,
     +    -8.1600E-01,-1.2300E+00,-1.9400E+00,-2.3400E+00,-2.3600E+00,
     3    -2.2000E+00,-1.7700E+00,-1.4100E+00,-1.1500E+00,-1.1400E+00,
     +    -1.7500E+00,-2.3600E+00,-5.9300E+00,-1.7800E+01,-1.7900E+01,
     4    -5.6500E+00,-2.4900E+00,-1.1500E+00,-8.2100E-01,-1.4300E+00,
     +     9.0700E-02, 3.9800E-03, 1.0900E-04, 4.5500E-06, 8.4500E-03,
     5     8.5200E-05,-2.2400E-01,-1.1600E+00,-1.7800E+00,-2.1200E+00,
     +    -2.3000E+00,-2.4100E+00,-2.5100E+00,-2.6200E+00,-2.7300E+00,
     6    -2.9200E+00,-3.0600E+00,-3.1600E+00,-3.2500E+00,-3.3600E+00,
     +    -3.3900E+00,-3.2900E+00,-3.7900E+00,-6.6900E+00,-8.9900E+00,
     7    -7.5200E+00,-4.0700E+00,-3.1200E+00, 1.8900E+01/

      DATA ( CL_ASY(   2, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O    -1.4700E+00,-8.0600E-01,-8.0600E-01,-1.0200E+00,-7.8000E-01,
     +    -7.8800E-01,-7.4800E-01,-7.4800E-01,-7.6600E-01,-8.1600E-01,
     1    -7.8200E-01,-6.2800E-01,-7.4400E-01,-7.2400E-01,-7.8200E-01,
     +    -7.1000E-01,-6.6800E-01,-6.3400E-01,-5.9600E-01,-5.0200E-01,
     2    -4.3000E-01,-8.7800E-01,-2.1600E+00,-6.5000E-01,-4.7800E-01,
     +    -6.6200E-01,-8.5400E-01,-1.0700E+00,-1.1300E+00,-1.1100E+00,
     3    -1.0600E+00,-9.2800E-01,-7.9400E-01,-6.6600E-01,-7.4600E-01,
     +    -1.2400E+00,-1.6300E+00,-2.0200E+00,-2.3900E+00,-2.2600E+00,
     4    -1.5900E+00,-1.1400E+00,-7.0800E-01,-4.0600E-01,-8.8000E-02,
     +     3.5000E-01, 9.9400E-01, 1.8800E+00, 2.6800E+00, 8.1200E-01,
     5     1.7400E+00,-5.4600E-01,-1.3300E+00,-1.4600E+00,-1.4800E+00,
     +    -1.4800E+00,-1.4700E+00,-1.4700E+00,-1.4600E+00,-1.4600E+00,
     6    -1.4600E+00,-1.4500E+00,-1.4400E+00,-1.4400E+00,-1.4200E+00,
     +    -1.3700E+00,-1.2400E+00,-1.1600E+00,-1.2900E+00,-1.2900E+00,
     7    -1.1000E+00,-6.8000E-01,-2.9800E-01, 1.8000E-02/

      DATA ( CL_ASY(   2, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O     8.7800E-01, 8.8200E-01, 8.8100E-01, 8.8100E-01, 8.8300E-01,
     +     8.8400E-01, 8.8500E-01, 8.8600E-01, 8.8600E-01, 8.8500E-01,
     1     8.8600E-01, 8.8900E-01, 8.8800E-01, 8.8800E-01, 8.8800E-01,
     +     8.9100E-01, 8.9400E-01, 8.9900E-01, 9.0600E-01, 9.2300E-01,
     2     9.5800E-01, 9.6300E-01, 9.6500E-01, 9.8700E-01, 1.0100E+00,
     +     9.8600E-01, 9.8400E-01, 9.8400E-01, 9.8400E-01, 9.8400E-01,
     3     9.8800E-01, 1.0000E+00, 1.0200E+00, 1.0500E+00, 1.0400E+00,
     +     9.9300E-01, 9.7900E-01, 9.7300E-01, 9.6700E-01, 9.6900E-01,
     4     9.8200E-01, 1.0000E+00, 1.0500E+00, 1.1500E+00, 2.0100E+00,
     +     6.4600E-01, 8.2600E-01, 8.7800E-01, 9.0000E-01, 8.0400E-01,
     5     9.1700E-01, 9.9400E-01, 9.8200E-01, 9.8300E-01, 9.7400E-01,
     +     9.6100E-01, 9.5400E-01, 9.5000E-01, 9.4600E-01, 9.4300E-01,
     6     9.3900E-01, 9.3700E-01, 9.3600E-01, 9.3500E-01, 9.3500E-01,
     +     9.3700E-01, 9.4400E-01, 9.4900E-01, 9.3800E-01, 9.3100E-01,
     7     9.4700E-01, 1.1000E+00, 1.7500E+00,-1.9700E+01/

      DATA ( CL_ASY(   3, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O    -9.9200E-02,-1.3000E-01,-1.5000E-01,-2.6400E-01,-1.7700E-01,
     +    -1.7700E-01,-1.8400E-01,-2.0700E-01,-2.0500E-01,-2.0300E-01,
     1    -2.1400E-01,-2.5500E-01,-2.5800E-01,-2.8900E-01,-2.7400E-01,
     +    -2.8400E-01,-2.8400E-01,-2.3100E-01,-2.2000E-01,-2.3100E-01,
     2    -2.9400E-01,-3.8700E-01,-1.6500E+00,-8.8600E-01,-6.4200E-01,
     +    -8.0900E-01,-1.5000E+00,-3.7600E+00,-4.6700E+00,-3.8000E+00,
     3    -3.2000E+00,-2.8200E+00,-2.6800E+00,-2.9900E+00,-1.6400E+01,
     +    -7.2200E+01,-7.5900E+00,-3.6500E+00,-3.9500E+00,-1.6300E+01,
     4    -7.5000E+01,-8.2900E+01,-7.7700E+01,-7.4100E+01,-7.3200E+01,
     +    -8.1300E+01,-9.0100E+01,-9.1000E+01,-6.1600E+01,-1.0100E+02,
     5    -7.4500E+00,-7.3900E-01,-4.6500E-01,-1.2700E+00,-2.0600E+00,
     +    -2.3200E+00,-2.5100E+00,-2.6900E+00,-2.8900E+00,-3.1000E+00,
     6    -3.4900E+00,-3.8400E+00,-4.1500E+00,-4.5300E+00,-5.2600E+00,
     +    -6.6300E+00,-1.2000E+01,-1.5700E+01,-1.2400E+01,-1.5900E+01,
     7    -2.0200E+01,-1.6600E+01,-1.0700E+01,-4.3800E+00/

      DATA ( CL_ASY(   3, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O    -9.0800E-01,-9.8600E-01,-1.0100E+00,-1.1800E+00,-1.0100E+00,
     +    -9.8000E-01,-9.6600E-01,-9.8400E-01,-9.5200E-01,-9.2000E-01,
     1    -9.1600E-01,-9.7400E-01,-9.3600E-01,-9.4200E-01,-8.8600E-01,
     +    -8.6200E-01,-8.1600E-01,-6.5400E-01,-5.3400E-01,-4.1000E-01,
     2    -2.6800E-01,-5.7000E-01,-1.9400E+00,-8.1000E-01,-4.5000E-01,
     +    -5.8400E-01,-8.8200E-01,-1.2800E+00,-1.3600E+00,-1.2700E+00,
     3    -1.1900E+00,-1.1300E+00,-1.1000E+00,-1.1400E+00,-1.8600E+00,
     +    -2.6400E+00,-2.1300E+00,-1.9200E+00,-1.9400E+00,-2.3000E+00,
     4    -2.5500E+00,-2.4600E+00,-2.3800E+00,-2.3300E+00,-2.2900E+00,
     +    -2.3000E+00,-2.3000E+00,-2.2800E+00,-2.1500E+00,-2.3300E+00,
     5    -1.5300E+00,-8.4000E-01,-8.5400E-01,-1.3100E+00,-1.4600E+00,
     +    -1.4700E+00,-1.4800E+00,-1.4800E+00,-1.4900E+00,-1.5000E+00,
     6    -1.5200E+00,-1.5300E+00,-1.5400E+00,-1.5600E+00,-1.5800E+00,
     +    -1.6200E+00,-1.7100E+00,-1.6700E+00,-1.5000E+00,-1.4900E+00,
     7    -1.4800E+00,-1.2900E+00,-1.0300E+00,-5.4600E-01/

      DATA ( CL_ASY(   3, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O     8.8000E-01, 8.8100E-01, 8.8000E-01, 8.8000E-01, 8.8200E-01,
     +     8.8300E-01, 8.8300E-01, 8.8400E-01, 8.8400E-01, 8.8400E-01,
     1     8.8500E-01, 8.8400E-01, 8.8500E-01, 8.8500E-01, 8.8700E-01,
     +     8.8800E-01, 8.9000E-01, 8.9800E-01, 9.1000E-01, 9.3500E-01,
     2     1.0100E+00, 9.8600E-01, 9.6500E-01, 9.7600E-01, 1.0300E+00,
     +     1.0100E+00, 9.9100E-01, 9.8100E-01, 9.8000E-01, 9.8200E-01,
     3     9.8400E-01, 9.8700E-01, 9.8800E-01, 9.8800E-01, 9.7800E-01,
     +     9.7600E-01, 9.7500E-01, 9.7200E-01, 9.6800E-01, 9.6700E-01,
     4     9.6900E-01, 9.7100E-01, 9.7200E-01, 9.7300E-01, 9.7400E-01,
     +     9.7500E-01, 9.7600E-01, 9.7800E-01, 9.8100E-01, 9.7200E-01,
     5     9.8800E-01, 1.0000E+00, 9.9400E-01, 9.8600E-01, 9.7500E-01,
     +     9.6100E-01, 9.5400E-01, 9.5000E-01, 9.4600E-01, 9.4300E-01,
     6     9.3900E-01, 9.3600E-01, 9.3400E-01, 9.3300E-01, 9.3200E-01,
     +     9.3100E-01, 9.3000E-01, 9.3100E-01, 9.3200E-01, 9.1700E-01,
     7     9.0000E-01, 9.0200E-01, 9.3200E-01, 1.1400E+00/

      DATA ( CL_EXT(   1, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O     1.6300E+03, 1.6700E+03, 1.6700E+03, 1.6800E+03, 1.7000E+03,
     +     1.7200E+03, 1.7300E+03, 1.7500E+03, 1.7600E+03, 1.7900E+03,
     1     1.8100E+03, 1.8400E+03, 1.8600E+03, 1.8700E+03, 1.9100E+03,
     +     1.9400E+03, 1.9600E+03, 1.9800E+03, 2.0100E+03, 2.1500E+03,
     2     3.2600E+03, 4.5600E+03, 2.7100E+03, 5.2900E+03, 6.4000E+03,
     +     5.4200E+03, 4.3000E+03, 3.3200E+03, 2.6900E+03, 2.2900E+03,
     3     2.0300E+03, 2.5200E+03,-4.3100E+04,-1.1000E+03,-2.6100E+02,
     +    -1.8400E+02,-4.9300E+02,-3.1500E+04, 1.9500E+03, 2.4100E+03,
     4    -1.1400E+03,-1.8700E+02,-4.3600E+01,-1.7600E+01,-7.1300E+00,
     +    -1.9700E+00,-2.8900E-01,-1.2900E-02,-2.6000E-04,-7.6200E-02,
     5    -9.9100E-06,-5.9100E+04,-3.8800E-05,-1.7900E+00,-8.3400E+01,
     +    -4.9000E+02,-7.7800E+02,-7.4700E+02,-6.1800E+02,-4.5600E+02,
     6    -2.8300E+02,-1.8200E+02,-1.2300E+02,-7.9800E+01,-3.5200E+01,
     +    -9.8600E+00,-1.2200E-01,-7.2700E-06,-2.9300E+04,-3.9300E+03,
     7    -4.0000E+02, 8.6300E+01, 1.7100E+00, 3.9300E-02/

      DATA ( CL_EXT(   1, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O    -1.0300E+00,-1.0400E+00,-1.0400E+00,-1.0500E+00,-1.0500E+00,
     +    -1.0600E+00,-1.0600E+00,-1.0700E+00,-1.0600E+00,-1.0700E+00,
     1    -1.0800E+00,-1.0900E+00,-1.0900E+00,-1.0900E+00,-1.1000E+00,
     +    -1.1100E+00,-1.1100E+00,-1.1100E+00,-1.1100E+00,-1.1500E+00,
     2    -1.4600E+00,-1.6100E+00,-1.2700E+00,-1.7300E+00,-1.7900E+00,
     +    -1.6300E+00,-1.4200E+00,-1.1900E+00,-9.8400E-01,-7.8600E-01,
     3    -5.4600E-01,-2.2600E-01, 8.0000E-03, 2.0400E-01, 4.5800E-01,
     +     5.0000E-01, 2.7000E-01, 8.0000E-03,-2.5000E-01,-1.8600E-01,
     4     1.8600E-01, 5.3200E-01, 9.2400E-01, 1.2000E+00, 1.4900E+00,
     +     1.9100E+00, 2.5700E+00, 3.6500E+00, 5.0600E+00, 3.0000E+00,
     5     6.0000E+00,-6.0000E+00, 5.2400E+00, 1.3600E+00, 4.1200E-01,
     +     1.6600E-01, 1.2800E-01, 1.3800E-01, 1.6400E-01, 2.0800E-01,
     6     2.9000E-01, 3.7800E-01, 4.6600E-01, 5.7000E-01, 7.8600E-01,
     +     1.1600E+00, 2.6100E+00, 6.0000E+00,-5.1800E+00,-3.6900E+00,
     7    -1.6000E+00, 2.9200E-01, 1.3600E+00, 2.3500E+00/

      DATA ( CL_EXT(   1, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O     7.6600E-01, 3.8300E+00, 3.4900E+00, 4.2600E+00, 4.4900E+00,
     +     4.9900E+00, 5.1300E+00, 5.9500E+00, 5.0100E+00, 5.9800E+00,
     1     6.8500E+00, 8.8100E+00, 8.6100E+00, 8.4100E+00, 7.5100E+00,
     +     1.0100E+01, 9.2900E+00, 7.6100E+00, 8.8000E+00, 1.4200E+01,
     2     5.4200E+01, 5.7400E+01, 2.3500E+01, 7.3400E+01, 7.0300E+01,
     +     4.7800E+01, 1.5200E+01,-3.3100E+01,-9.6600E+01,-1.8900E+02,
     3    -3.8800E+02,-1.3000E+03, 4.4100E+04, 1.9600E+03, 9.5500E+02,
     +     7.8300E+02, 1.1100E+03, 3.2300E+04,-9.0200E+02,-1.3800E+03,
     4     1.9500E+03, 8.4500E+02, 5.8200E+02, 4.9900E+02, 4.4300E+02,
     +     3.8700E+02, 3.3500E+02, 2.8400E+02, 2.4800E+02, 3.0200E+02,
     5     1.9500E+02, 1.5500E+02, 1.4000E+02, 1.6600E+02, 3.5100E+02,
     +     8.6900E+02, 1.2000E+03, 1.1900E+03, 1.0700E+03, 9.0700E+02,
     6     7.2800E+02, 6.1500E+02, 5.4100E+02, 4.8100E+02, 4.0200E+02,
     +     3.3000E+02, 2.3700E+02, 1.7600E+02, 1.4400E+02, 1.3500E+02,
     7     1.3900E+02,-6.7600E+01, 2.8700E+01, 1.9000E+01/

      DATA ( CL_EXT(   2, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O     1.6300E+03, 1.6100E+03, 1.6200E+03, 1.6400E+03, 1.6400E+03,
     +     1.6500E+03, 1.6600E+03, 1.6700E+03, 1.6800E+03, 1.6900E+03,
     1     1.7000E+03, 1.7100E+03, 1.7300E+03, 1.7400E+03, 1.7700E+03,
     +     1.7800E+03, 1.8000E+03, 1.8300E+03, 1.8700E+03, 1.9100E+03,
     2     1.9900E+03, 2.0500E+03, 2.0200E+03, 2.1700E+03, 2.2400E+03,
     +     2.2600E+03, 2.2800E+03, 2.2800E+03, 2.2800E+03, 2.2800E+03,
     3     2.2800E+03, 2.3000E+03, 2.3400E+03, 2.4100E+03, 2.7600E+03,
     +     3.1200E+03, 2.9200E+03, 2.7400E+03, 2.6100E+03, 2.6200E+03,
     4     2.7600E+03, 3.0300E+03, 3.5600E+03, 4.0600E+03, 4.7400E+03,
     +     5.9800E+03, 8.0000E+03, 9.6300E+03, 8.5300E+03, 7.5200E+03,
     5     2.3700E+03, 8.1700E+02, 7.9400E+02, 5.3800E+02, 7.1100E+02,
     +     1.0700E+03, 1.2800E+03, 1.4000E+03, 1.5000E+03, 1.5900E+03,
     6     1.7300E+03, 1.8200E+03, 1.8900E+03, 1.9500E+03, 2.0200E+03,
     +     2.0300E+03, 1.6900E+03, 9.3800E+02, 1.1900E+03,-7.3800E+02,
     7    -9.4400E+01,-4.0700E-01,-1.9000E-07,-4.4900E+03/

      DATA ( CL_EXT(   2, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O    -1.0300E+00,-1.0200E+00,-1.0200E+00,-1.0300E+00,-1.0200E+00,
     +    -1.0300E+00,-1.0300E+00,-1.0300E+00,-1.0300E+00,-1.0300E+00,
     1    -1.0400E+00,-1.0400E+00,-1.0400E+00,-1.0400E+00,-1.0500E+00,
     +    -1.0500E+00,-1.0500E+00,-1.0600E+00,-1.0600E+00,-1.0700E+00,
     2    -1.0800E+00,-1.0900E+00,-1.0800E+00,-1.1000E+00,-1.1100E+00,
     +    -1.1200E+00,-1.1200E+00,-1.1100E+00,-1.1100E+00,-1.1100E+00,
     3    -1.1100E+00,-1.1100E+00,-1.1200E+00,-1.1300E+00,-1.1900E+00,
     +    -1.2400E+00,-1.2200E+00,-1.1900E+00,-1.1600E+00,-1.1600E+00,
     4    -1.1800E+00,-1.2200E+00,-1.2900E+00,-1.3400E+00,-1.4000E+00,
     +    -1.4900E+00,-1.6000E+00,-1.6600E+00,-1.5900E+00,-1.5500E+00,
     5    -1.0200E+00,-4.2400E-01,-1.4800E-01,-2.8800E-01,-6.0600E-01,
     +    -7.9400E-01,-8.6200E-01,-8.9400E-01,-9.1800E-01,-9.3800E-01,
     6    -9.6600E-01,-9.8200E-01,-9.9400E-01,-1.0000E+00,-1.0100E+00,
     +    -1.0000E+00,-8.9200E-01,-5.4400E-01,-9.2000E-02, 8.0000E-02,
     7     3.0600E-01, 1.4800E+00, 5.4100E+00,-1.8400E+00/

      DATA ( CL_EXT(   2, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O     9.9000E-01, 5.4400E-01, 6.3400E-01, 8.3300E-01, 6.4400E-01,
     +     7.2300E-01, 8.1300E-01, 8.7300E-01, 9.2800E-01, 9.8900E-01,
     1     1.0400E+00, 1.0100E+00, 1.1600E+00, 1.1900E+00, 1.4600E+00,
     +     1.3200E+00, 1.5000E+00, 1.6300E+00, 1.9300E+00, 1.9600E+00,
     2     2.5400E+00, 2.6600E+00, 2.2400E+00, 3.0100E+00, 3.3200E+00,
     +     3.2900E+00, 3.1600E+00, 2.9100E+00, 2.6600E+00, 2.4200E+00,
     3     2.1900E+00, 2.2500E+00, 2.6000E+00, 3.4700E+00, 6.8200E+00,
     +     9.5100E+00, 8.2400E+00, 6.8600E+00, 5.4900E+00, 5.3600E+00,
     4     6.3400E+00, 8.3500E+00, 1.1600E+01, 1.4000E+01, 1.6500E+01,
     +     1.9600E+01, 2.2500E+01, 2.2600E+01, 1.8300E+01, 1.9100E+01,
     5    -1.6900E+01,-1.3500E+02,-4.2300E+02,-1.4800E+02,-3.7200E+01,
     +    -1.7300E+01,-1.2700E+01,-1.0800E+01,-9.5800E+00,-8.6100E+00,
     6    -7.2600E+00,-6.6700E+00,-6.1800E+00,-6.0700E+00,-6.1400E+00,
     +    -7.6300E+00,-2.0200E+01,-8.4400E+01,-8.0800E+02, 1.0300E+03,
     7     3.3400E+02, 1.3200E+02, 8.8900E+01, 7.1200E+01/

      DATA ( CL_EXT(   3, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O     9.4000E+02, 9.4100E+02, 9.4200E+02, 9.4800E+02, 9.5400E+02,
     +     9.5500E+02, 9.6200E+02, 9.6300E+02, 9.7000E+02, 9.7600E+02,
     1     9.7800E+02, 9.8400E+02, 9.9100E+02, 9.9900E+02, 1.0100E+03,
     +     1.0100E+03, 1.0300E+03, 1.0400E+03, 1.0500E+03, 1.0700E+03,
     2     1.0900E+03, 1.1200E+03, 1.1200E+03, 1.1700E+03, 1.2000E+03,
     +     1.2200E+03, 1.2300E+03, 1.2400E+03, 1.2600E+03, 1.2700E+03,
     3     1.2800E+03, 1.3000E+03, 1.3100E+03, 1.3100E+03, 1.3200E+03,
     +     1.3000E+03, 1.2700E+03, 1.2800E+03, 1.3000E+03, 1.3200E+03,
     4     1.3500E+03, 1.3700E+03, 1.3900E+03, 1.4000E+03, 1.4100E+03,
     +     1.4200E+03, 1.4400E+03, 1.4600E+03, 1.5000E+03, 1.5200E+03,
     5     1.9600E+03, 2.4500E+03, 1.6800E+03, 9.7700E+02, 8.9200E+02,
     +     1.0300E+03, 1.1300E+03, 1.1900E+03, 1.2400E+03, 1.2800E+03,
     6     1.3500E+03, 1.4000E+03, 1.4400E+03, 1.4700E+03, 1.5300E+03,
     +     1.6100E+03, 1.8100E+03, 2.1300E+03, 1.8600E+03, 1.5200E+03,
     7     1.5400E+03, 1.3600E+03, 6.8500E+02,-2.2600E-01/

      DATA ( CL_EXT(   3, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O    -8.0600E-01,-8.0600E-01,-8.0600E-01,-8.0800E-01,-8.1000E-01,
     +    -8.1000E-01,-8.1200E-01,-8.1200E-01,-8.1400E-01,-8.1600E-01,
     1    -8.1600E-01,-8.1800E-01,-8.2000E-01,-8.2200E-01,-8.2400E-01,
     +    -8.2600E-01,-8.3000E-01,-8.3200E-01,-8.3600E-01,-8.4000E-01,
     2    -8.4600E-01,-8.5200E-01,-8.5200E-01,-8.6400E-01,-8.7000E-01,
     +    -8.7400E-01,-8.7600E-01,-8.7800E-01,-8.8200E-01,-8.8400E-01,
     3    -8.8800E-01,-8.9200E-01,-8.9400E-01,-8.9400E-01,-8.9600E-01,
     +    -8.9200E-01,-8.8400E-01,-8.8600E-01,-8.9000E-01,-8.9400E-01,
     4    -9.0000E-01,-9.0400E-01,-9.0800E-01,-9.1000E-01,-9.1200E-01,
     +    -9.1400E-01,-9.1600E-01,-9.2000E-01,-9.2800E-01,-9.3000E-01,
     5    -1.0200E+00,-1.0900E+00,-9.6600E-01,-7.8800E-01,-7.6200E-01,
     +    -8.0800E-01,-8.3600E-01,-8.5000E-01,-8.6200E-01,-8.7200E-01,
     6    -8.8600E-01,-8.9600E-01,-9.0400E-01,-9.1000E-01,-9.2000E-01,
     +    -9.3400E-01,-9.6600E-01,-1.0100E+00,-9.5200E-01,-8.7200E-01,
     7    -8.6200E-01,-7.9000E-01,-4.6800E-01, 1.2900E+00/

      DATA ( CL_EXT(   3, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O    -1.0100E+01,-1.0100E+01,-1.0200E+01,-1.0100E+01,-9.9900E+00,
     +    -1.0000E+01,-9.9500E+00,-9.9800E+00,-9.9100E+00,-9.8400E+00,
     1    -9.8900E+00,-9.7900E+00,-9.7400E+00,-9.6900E+00,-9.6500E+00,
     +    -9.6100E+00,-9.4400E+00,-9.4000E+00,-9.3100E+00,-9.2200E+00,
     2    -9.0800E+00,-8.9400E+00,-8.9900E+00,-8.6700E+00,-8.5100E+00,
     +    -8.3800E+00,-8.3500E+00,-8.3200E+00,-8.1900E+00,-8.1600E+00,
     3    -8.0300E+00,-7.9000E+00,-7.8600E+00,-7.9000E+00,-7.8200E+00,
     +    -7.9400E+00,-8.2000E+00,-8.1400E+00,-8.0400E+00,-7.9200E+00,
     4    -7.7600E+00,-7.6600E+00,-7.5600E+00,-7.5200E+00,-7.4800E+00,
     +    -7.4700E+00,-7.4800E+00,-7.4200E+00,-7.1500E+00,-7.1300E+00,
     5    -3.7300E+00,-1.5700E+00,-5.8400E+00,-1.2800E+01,-1.3500E+01,
     +    -1.1500E+01,-1.0500E+01,-1.0100E+01,-9.6600E+00,-9.3700E+00,
     6    -8.9700E+00,-8.6700E+00,-8.4200E+00,-8.2800E+00,-8.0100E+00,
     +    -7.5800E+00,-6.7100E+00,-5.7200E+00,-8.6800E+00,-1.3000E+01,
     7    -1.4500E+01,-2.1700E+01,-6.7500E+01, 8.1000E+01/

      DATA ( CL_SSA(   1, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O     1.4200E-06,-2.3300E-05,-2.0300E-05, 1.4300E-07, 2.5700E-08,
     +     2.1000E-08, 3.7200E-09, 1.8200E-08, 2.7000E-07, 5.4700E-07,
     1     9.9500E-07, 5.9300E-07, 8.0300E-07, 7.4200E-06, 2.3600E-04,
     +     1.5900E-04, 3.1100E-04, 1.0100E-03, 1.3800E-03, 4.0000E-03,
     2     1.2500E-02, 2.0000E+00,-1.2200E+00,-5.9400E-01, 1.6900E-01,
     +     1.4000E-01, 1.5000E-01, 1.4000E-01, 7.8900E-02, 3.8300E-02,
     3     1.7700E-02, 6.9600E-03, 3.6800E-03, 2.2900E-03, 1.9200E-03,
     +     9.3200E-04, 1.3200E-04, 2.1300E-03, 3.8300E-02, 3.5600E-02,
     4     7.6800E-03, 2.2800E-03, 6.5900E-04, 2.8000E-04, 1.1300E-04,
     +     2.6700E-05, 1.9600E-06, 1.9100E-08, 1.3500E+02, 2.6900E-08,
     5     7.6700E+00, 1.7000E+00, 1.0700E+00, 9.8000E-01, 9.4300E-01,
     +     8.5700E-01, 8.3800E-01, 8.3600E-01, 8.4100E-01, 8.5300E-01,
     6     8.8200E-01, 9.1800E-01, 9.5400E-01, 1.0000E+00, 1.1000E+00,
     +     1.2200E+00, 1.3900E+00, 1.3800E+00, 1.2700E+00, 1.9200E+00,
     7    -1.0500E+01,-3.0300E-01,-3.9500E-02,-1.3700E-03/

      DATA ( CL_SSA(   1, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O     7.6600E-01,-2.3200E-01,-1.5200E+00, 9.5200E-01, 1.2100E+00,
     +     1.1300E+00, 1.6000E+00, 1.2100E+00, 7.3400E-01, 8.1400E-01,
     1     8.5600E-01, 1.2600E+00, 1.4400E+00, 1.0500E+00, 4.1000E-01,
     +     7.8600E-01, 8.2000E-01, 7.1600E-01, 7.9000E-01, 6.8800E-01,
     2     6.0200E-01, 4.6000E-02,-1.9000E+00,-5.2400E-01, 2.8400E-01,
     +     3.6000E-01, 4.0400E-01, 4.7000E-01, 6.2800E-01, 8.2800E-01,
     3     1.0600E+00, 1.3600E+00, 1.5700E+00, 1.7300E+00, 1.8700E+00,
     +     2.0700E+00, 2.6100E+00, 1.6200E+00, 7.7400E-01, 8.6000E-01,
     4     1.4100E+00, 1.8300E+00, 2.2600E+00, 2.5600E+00, 2.8700E+00,
     +     3.3800E+00, 4.3300E+00, 6.0000E+00,-6.0000E+00, 5.9300E+00,
     5    -3.0800E+00,-1.5000E+00,-8.1000E-01,-4.3600E-01,-3.9000E-01,
     +    -5.2200E-01,-6.1800E-01,-6.7600E-01,-7.3200E-01,-7.8600E-01,
     6    -8.7200E-01,-9.4600E-01,-1.0100E+00,-1.0700E+00,-1.1700E+00,
     +    -1.2500E+00,-1.2300E+00,-9.6800E-01,-5.2400E-01,-1.9000E-01,
     7     2.4000E-02, 4.1200E-01, 9.7000E-01, 2.0300E+00/

      DATA ( CL_SSA(   1, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O    -1.0200E-06, 1.9500E-05, 4.0100E-06,-2.3100E-08, 1.0100E-07,
     +     5.5900E-08, 1.0700E-07, 6.8900E-08,-2.4300E-07,-1.4100E-07,
     1    -4.3700E-07, 1.6900E-06, 5.0400E-06, 5.0800E-06,-2.6900E-04,
     +    -1.3300E-04,-2.1700E-04,-9.8400E-04,-1.2900E-03,-4.4800E-03,
     2    -1.6200E-02,-2.0600E+00, 4.9300E-01, 4.2200E-01,-2.1700E-01,
     +    -1.9000E-01,-2.0700E-01,-1.9300E-01,-1.0800E-01,-4.4200E-02,
     3    -3.4600E-03, 2.6100E-02, 3.9100E-02, 4.9600E-02, 1.1600E-01,
     +     2.7000E-01, 3.9600E-01, 3.7200E-01, 2.3100E-01, 1.7400E-01,
     4     1.6300E-01, 1.5900E-01, 1.6700E-01, 1.6900E-01, 1.7200E-01,
     +     1.8200E-01, 1.9600E-01, 2.2100E-01, 2.4700E-01, 2.3800E-01,
     5     2.9600E-01, 3.2300E-01, 3.2700E-01, 2.3100E-01, 2.3200E-01,
     +     3.4200E-01, 3.8800E-01, 4.0800E-01, 4.2500E-01, 4.3800E-01,
     6     4.5500E-01, 4.6600E-01, 4.7300E-01, 4.8000E-01, 4.8600E-01,
     +     4.8800E-01, 4.7100E-01, 4.1300E-01, 2.3500E-01,-5.6700E-01,
     7     1.1800E+01, 1.4900E+00, 1.1200E+00, 1.0100E+00/

      DATA ( CL_SSA(   2, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O     9.0000E-07, 5.0800E-07, 3.6800E-07, 3.9400E-07, 1.6700E-07,
     +     2.7500E-07, 2.7700E-08, 3.2300E-08, 1.1900E-07, 5.9100E-07,
     1     1.8800E-07, 4.5200E-06, 3.7900E-05, 1.5800E-05, 2.8200E-05,
     +     8.5400E-05, 2.2700E-04, 4.6200E-04, 7.2500E-04, 2.1000E-03,
     2     5.8100E-03, 5.9200E-01,-9.0000E-05,-2.7600E+00, 6.5700E-02,
     +     1.4400E-01, 1.2900E+00,-1.2700E+00,-1.1900E+00,-1.2700E+00,
     3    -1.3900E+00,-1.4800E+00,-1.5000E+00,-1.3500E+00,-3.3400E+00,
     +    -1.5900E+03,-6.3100E+04,-1.0500E-11,-6.0600E-10,-6.2700E+04,
     4    -9.3900E+01,-2.3600E+01,-1.9500E+01,-1.7900E+01,-1.7800E+01,
     +    -2.0000E+01,-1.9700E+01,-1.4000E+01,-6.6800E+00,-1.5500E+01,
     5    -1.6800E+00, 8.0000E-03, 3.0100E-08, 4.7300E+01, 1.9600E+00,
     +     1.0900E+00, 8.4700E-01, 7.2500E-01, 6.3000E-01, 5.5500E-01,
     6     4.7000E-01, 4.3400E-01, 4.4800E-01, 6.3400E-01,-2.9700E-01,
     +    -2.3300E-02,-8.0400E-04, 6.0000E+04, 1.1800E+02, 9.2300E+00,
     7     9.9200E+00, 4.1200E+01, 3.9100E+01, 1.0600E+01/

      DATA ( CL_SSA(   2, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O     9.4200E-01, 9.8800E-01, 9.2200E-01, 7.0600E-01, 7.1200E-01,
     +     5.1600E-01, 9.7400E-01, 1.0100E+00, 9.7600E-01, 8.4600E-01,
     1     1.3200E+00, 6.7200E-01, 3.8200E-01, 8.3000E-01, 1.0000E+00,
     +     9.6200E-01, 9.1400E-01, 9.4400E-01, 9.5800E-01, 8.6600E-01,
     2     8.0800E-01, 1.0600E-01, 1.4000E+00,-4.0000E-02, 4.6600E-01,
     +     3.4000E-01, 8.8000E-02,-2.2400E-01,-2.9400E-01,-2.3400E-01,
     3    -1.9200E-01,-1.7400E-01,-1.7400E-01,-2.3000E-01,-1.1400E+00,
     +    -3.9900E+00,-6.0000E+00, 6.0000E+00, 4.8700E+00,-6.0000E+00,
     4    -2.8400E+00,-2.1200E+00,-1.9600E+00,-1.8700E+00,-1.8300E+00,
     +    -1.8400E+00,-1.7900E+00,-1.5900E+00,-1.2300E+00,-1.6900E+00,
     5    -2.1400E-01, 9.3600E-01, 4.0400E+00,-2.6700E+00,-1.1600E+00,
     +    -8.9000E-01,-7.8200E-01,-7.0800E-01,-6.3400E-01,-5.6000E-01,
     6    -4.3400E-01,-3.2400E-01,-2.2400E-01,-1.0600E-01, 1.0800E-01,
     +     4.3400E-01, 1.0500E+00,-6.0000E+00,-3.0200E+00,-1.7500E+00,
     7    -1.7400E+00,-2.2800E+00,-2.1200E+00,-1.3100E+00/

      DATA ( CL_SSA(   2, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O    -9.6000E-07, 5.9700E-07,-4.0100E-08,-7.9300E-07,-3.6500E-07,
     +    -6.0400E-07,-1.0700E-08, 4.6200E-08, 6.7600E-08,-9.3400E-07,
     1     3.0800E-06,-8.0300E-06,-6.2200E-05,-1.6400E-05, 4.6500E-05,
     +     5.5000E-05,-3.5700E-05, 1.5700E-04, 7.0500E-04,-4.4300E-04,
     2    -3.6900E-03,-5.8900E-01, 4.8500E-01, 2.7600E+00,-8.4700E-02,
     +    -1.8600E-01,-1.4100E+00, 9.8100E-01, 8.3300E-01, 9.6000E-01,
     3     1.1000E+00, 1.1900E+00, 1.1900E+00, 9.8300E-01, 5.0900E-01,
     +     4.9300E-01, 5.0200E-01, 5.0200E-01, 5.0000E-01, 4.9300E-01,
     4     4.8700E-01, 4.9000E-01, 4.9100E-01, 4.9200E-01, 4.9300E-01,
     +     4.9500E-01, 5.0100E-01, 5.2300E-01, 5.6600E-01, 5.1900E-01,
     5     1.2800E+00, 2.7400E-01, 4.5700E-01, 5.0700E-01, 4.8200E-01,
     +     4.5800E-01, 4.4700E-01, 4.3900E-01, 4.3100E-01, 4.2100E-01,
     6     3.9500E-01, 3.5900E-01, 2.9400E-01, 6.1900E-02, 9.3500E-01,
     +     6.1000E-01, 5.4400E-01, 5.2100E-01, 5.2300E-01, 5.1500E-01,
     7     5.1500E-01, 5.1800E-01, 5.0200E-01, 4.1200E-01/

      DATA ( CL_SSA(   3, IVWC,   1 ), IVWC = 1, MXWVWC ) /
     O     3.1400E-06, 2.1800E-06, 7.5000E-07, 3.4200E-07, 1.3500E-07,
     +     6.8500E-08, 2.2500E-07, 9.1200E-08, 3.3200E-07, 8.3400E-07,
     1     2.0300E-05, 6.1600E-06, 6.0900E-06, 3.0800E-05, 1.5000E-04,
     +     3.5800E-04, 7.0300E-04, 1.9700E-03, 3.6500E-03, 1.3200E-02,
     2     4.8100E-02,-1.1300E+00, 2.1700E-01,-1.1700E+00,-1.6800E+00,
     +    -1.5500E+00,-2.8400E+00,-8.6500E+00,-1.1500E+01,-8.5000E+00,
     3    -6.4900E+00,-5.0900E+00,-4.4100E+00,-4.5000E+00,-4.1900E+01,
     +    -1.1500E-04, 3.1900E-01, 4.3400E-01, 4.0300E-01, 1.8200E-01,
     4    -1.9300E-12,-6.0100E+06,-2.5400E+04,-2.7700E+03,-9.0600E+02,
     +    -5.9400E+02,-5.2300E+02,-1.4500E+03,-5.1300E+03,-4.7000E+04,
     5    -1.7900E+05,-6.3100E+04,-1.8200E+04,-3.5200E-04, 8.6800E-01,
     +     1.0500E+00, 9.6900E-01, 9.2600E-01, 8.8300E-01, 8.4300E-01,
     6     7.9700E-01, 7.5800E-01, 7.2500E-01, 6.9500E-01, 6.3500E-01,
     +     5.4100E-01, 5.3300E-01,-1.4200E-03,-2.6200E-04,-9.9400E-02,
     7    -1.2600E-01,-4.5600E-04, 1.1600E-01, 1.6200E+07/

      DATA ( CL_SSA(   3, IVWC,   2 ), IVWC = 1, MXWVWC ) /
     O     6.8800E-01, 6.9000E-01, 7.8200E-01, 7.6400E-01, 7.7800E-01,
     +     8.2200E-01, 5.4800E-01, 7.9400E-01, 7.6200E-01, 7.7800E-01,
     1     3.3200E-01, 6.5200E-01, 7.8800E-01, 7.1200E-01, 6.6000E-01,
     +     6.7000E-01, 6.9000E-01, 6.5000E-01, 6.2800E-01, 5.0600E-01,
     2     4.0800E-01,-1.3400E-01,-7.4800E-01,-5.4000E-01,-1.6400E-01,
     +    -3.5800E-01,-7.6600E-01,-1.2900E+00,-1.4100E+00,-1.2800E+00,
     3    -1.1600E+00,-1.0400E+00,-9.7600E-01,-9.8800E-01,-2.0200E+00,
     +     1.1500E+00,-6.2000E-01,-7.4400E-01,-7.2200E-01,-3.4000E-01,
     4     5.2000E+00,-6.0000E+00,-4.2100E+00,-3.4700E+00,-3.0900E+00,
     +    -2.9300E+00,-2.8700E+00,-3.1800E+00,-3.5500E+00,-4.3300E+00,
     5    -4.5500E+00,-4.1900E+00,-3.9900E+00, 9.3800E-01,-8.1000E-01,
     +    -8.4800E-01,-8.1400E-01,-7.9200E-01,-7.6800E-01,-7.4400E-01,
     6    -7.1200E-01,-6.8400E-01,-6.6000E-01,-6.3600E-01,-5.8600E-01,
     +    -4.9400E-01,-1.2800E-01, 8.8800E-01, 1.2200E+00, 2.0400E-01,
     7     1.8600E-01, 1.0900E+00,-3.1600E-01,-6.0000E+00/

      DATA ( CL_SSA(   3, IVWC,   3 ), IVWC = 1, MXWVWC ) /
     O    -1.1600E-05,-7.6400E-06,-2.3600E-06,-1.0700E-06,-3.9400E-07,
     +    -1.4400E-07,-7.0500E-07,-3.1200E-07,-1.0900E-06,-2.2500E-06,
     1    -4.3200E-05,-2.0400E-05,-1.2300E-05,-9.8200E-05,-5.2000E-04,
     +    -1.2100E-03,-2.3400E-03,-6.4500E-03,-1.1500E-02,-3.4400E-02,
     2    -1.0600E-01, 9.7500E-01, 4.5700E-01, 5.3700E-01, 1.2000E+00,
     +     7.3000E-01, 5.4200E-01, 4.9300E-01, 4.9000E-01, 4.9600E-01,
     3     5.0300E-01, 5.1300E-01, 5.2000E-01, 5.1900E-01, 4.8200E-01,
     +     4.9700E-01, 4.5900E-01, 4.6100E-01, 4.5700E-01, 4.3300E-01,
     4     4.8200E-01, 4.8000E-01, 4.8000E-01, 4.8100E-01, 4.8200E-01,
     +     4.8300E-01, 4.8500E-01, 4.8700E-01, 4.8900E-01, 4.8500E-01,
     5     4.9600E-01, 5.0300E-01, 5.0500E-01, 5.2100E-01, 4.6400E-01,
     +     4.5200E-01, 4.4500E-01, 4.4200E-01, 4.3900E-01, 4.3600E-01,
     6     4.3200E-01, 4.2900E-01, 4.2700E-01, 4.2400E-01, 4.1900E-01,
     +     4.0800E-01, 1.7100E-01, 5.5100E-01, 5.4400E-01, 7.3800E-01,
     7     7.7800E-01, 5.5400E-01, 4.9100E-01, 5.1300E-01/

      DATA RADBIN_LOWER /
     &     2.5000E+00, 1.2500E+01, 3.0000E+01/

      DATA RADBIN_UPPER /
     &     1.2500E+01, 3.0000E+01, 6.0000E+01/


      INTERFACE
        SUBROUTINE WVBIN_AVERAGE(WL_CS_IN, CS_IN, NWL_CS_IN,  
     &                         WL_QY_IN, QY_IN, NWL_QY_IN,  
     &                         SPECTRA_TYPE,
     &                         WLL_AVE, WLU_AVE, NWL_AVE, 
     &                         CS_AVE, QY_AVE )
          CHARACTER(1), INTENT( IN ) :: SPECTRA_TYPE        ! spectra type
          INTEGER, INTENT( IN )      :: NWL_AVE             ! number of intervals average 
          INTEGER, INTENT( IN )      :: NWL_CS_IN           ! number of intervals CS_IN
          INTEGER, INTENT( IN )      :: NWL_QY_IN           ! number of intervals CS_IN
          REAL, INTENT( IN )         :: WL_CS_IN( : )  ! wl for CS_IN
          REAL, INTENT( IN )         :: WL_QY_IN( : )  ! wl for QY_IN
          REAL, INTENT( IN )         :: CS_IN( : )     ! cross-section as f(WLIN)
          REAL, INTENT( IN )         :: QY_IN( : )     ! quantum yield as f(WLIN)
          REAL, INTENT( INOUT )      :: WLL_AVE( : )   ! lower limit on wl effective interval
          REAL, INTENT( INOUT )      :: WLU_AVE( : )   ! upper limit on wl effective interval
          REAL, INTENT( INOUT )      :: CS_AVE( : )    ! cross-section as f(WL_AVE)
          REAL, INTENT( INOUT )      :: QY_AVE( : )    ! quantum yield as f(WL_AVE)
        END SUBROUTINE WVBIN_AVERAGE
        SUBROUTINE WVBIN_AVERAGE_B(WL_CS_IN, CS_IN, NWL_CS_IN,  

     &                         WL_QY_IN, QY_IN, NWL_QY_IN,  
     &                         SPECTRA_TYPE,
     &                         WLL_AVE, WLU_AVE, NWL_AVE, 
     &                         CS_AVE, QY_AVE )
          CHARACTER(1), INTENT( IN ) :: SPECTRA_TYPE        ! spectra type
          INTEGER, INTENT( IN )      :: NWL_AVE             ! number of intervals average 
          INTEGER, INTENT( IN )      :: NWL_CS_IN           ! number of intervals CS_IN
          INTEGER, INTENT( IN )      :: NWL_QY_IN           ! number of intervals CS_IN
          REAL, INTENT( IN )         :: WL_CS_IN( : )  ! wl for CS_IN
          REAL, INTENT( IN )         :: WL_QY_IN( : )  ! wl for QY_IN
          REAL, INTENT( IN )         :: CS_IN( : )     ! cross-section as f(WLIN)
          REAL, INTENT( IN )         :: QY_IN( : )     ! quantum yield as f(WLIN)
          REAL, INTENT( INOUT )      :: WLL_AVE( : )   ! lower limit on wl effective interval
          REAL, INTENT( INOUT )      :: WLU_AVE( : )   ! upper limit on wl effective interval
          REAL, INTENT( INOUT )      :: CS_AVE( : )    ! cross-section as f(WL_AVE)
          REAL, INTENT( INOUT )      :: QY_AVE( : )    ! quantum yield as f(WL_AVE)
        END SUBROUTINE WVBIN_AVERAGE_B
      END INTERFACE  

         IF ( FIRST ) THEN

              FIRST = .FALSE.

C     Read in water cloud optical parameters.
     
              ALLOCATE( WAVE( MXWLIN ), XDUMB( MXWLIN ), ZDUMB( MXWLIN ), 
     &                  YDUMB( MXWLIN) )

              ALLOCATE( WAVE_OUTC( MXWLIN ), WAVE_OUTL( MXWLIN ), WAVE_OUTU( MXWLIN ))

              ALLOCATE( NEW_CL_ASY( MXSIZ, MXWLIN, MXCOF ), NEW_CL_EXT( MXSIZ, MXWLIN, MXCOF), 
     &                  NEW_CL_SSA( MXSIZ, MXWLIN, MXCOF ))
     



              XDUMB = 1.0
              NDUMB = MXWVWC
              WAVE  = 0.0
              WAVE( 1:NDUMB ) =  WCWVN( 1:NDUMB )

              NEW_CL_EXT = 0.0
              NEW_CL_ASY = 0.0
              NEW_CL_SSA = 0.0
              COEFFS     = 0.0


! intepolate Fu et al. coefficients from WCCWVN to WAVE
                 WRITE(6,99001)'WVL','ISIZ','ICOF','NEW_CL_EXT', 'NEW_CL_ASY',
     &          'NEW_CL_SSA'
99001            FORMAT(A12,1X,2(A4,1X),6(A12,1X))                 

                 DO I = 1, MXSIZ
                     DO J = 1, MXCOF

                    COEFFS( 1:NDUMB ) = CL_EXT( I, 1:NDUMB, J )
                 
                    CALL WVBIN_AVERAGE(WAVE, COEFFS, NDUMB, WAVE, XDUMB, NDUMB, 'P',
     &                             WAVE_OUTL, WAVE_OUTU, MXWLIN, YDUMB, ZDUMB )

                    NEW_CL_EXT( I, 1:NJO_NEW, J ) = YDUMB( 1:NJO_NEW )

                    COEFFS( 1:NDUMB ) = CL_ASY( I, 1:NDUMB, J )

                 
                    CALL WVBIN_AVERAGE(WAVE, COEFFS, NDUMB, WAVE, XDUMB, NDUMB, 'P',
     &                             WAVE_OUTL, WAVE_OUTU, MXWLIN, YDUMB, ZDUMB )

                    NEW_CL_ASY( I, 1:NJO_NEW, J ) = YDUMB( 1:NJO_NEW )

                    COEFFS( 1:NDUMB ) = CL_SSA( I, 1:NDUMB, J )

                 
                    CALL WVBIN_AVERAGE(WAVE, COEFFS, NDUMB, WAVE, XDUMB, NDUMB, 'P',
     &                             WAVE_OUTL, WAVE_OUTU, MXWLIN, YDUMB, ZDUMB )

                    NEW_CL_SSA( I, 1:NJO_NEW, J ) = YDUMB( 1:NJO_NEW )

                    DO IVWC = 1, N_INLINE_BAND ! 248, 298, 25
                       K = NJO_NEW - N_INLINE_BAND + IVWC           

                       WRITE(6,99002)EFFECTIVE_LAMBDA(K), I, J, 
     &                NEW_CL_EXT( I, K, J ), NEW_CL_ASY( I, K, J ), NEW_CL_SSA( I, K, J )
     
99002                  FORMAT(es12.4,1X,2(I4,1X),6(es12.4,1X))                       
                   END DO
                 
                 END DO
               END DO

               DO ISIZE = 1, MXSIZ
                  IF( CLOUD_RADIUS_LIQUID .GE. RADBIN_LOWER(ISIZE) .AND.
     &               CLOUD_RADIUS_LIQUID .LE. RADBIN_UPPER(ISIZE) )THEN
                      EXIT
                  ENDIF
               ENDDO

               DO I = 1, N_INLINE_BAND ! 248, 298, 25
                  K = NJO_NEW - N_INLINE_BAND + I
C     Extinction coefficient
     
                 CLOUD_LIQ_EXT( K ) = new_cl_ext(ISIZE,K,1) 
     &                               * CLOUD_RADIUS_LIQUID ** new_cl_ext(ISIZE,K,2) 
     &                               + new_cl_ext(ISIZE,K,3)

C     Asymmetry factor
     
                 CLOUD_LIQ_ASF( K ) = new_cl_asy(ISIZE,K,1)
     &                               * CLOUD_RADIUS_LIQUID ** new_cl_asy(ISIZE,K,2)
     &                               + new_cl_asy(ISIZE,K,3)
     
C     Single scattering albedo
     
                 CLOUD_LIQ_SSA( K ) = new_cl_ssa(ISIZE,K,1)
     &                               * CLOUD_RADIUS_LIQUID ** new_cl_ssa(ISIZE,K,2)
     &                               + new_cl_ssa(ISIZE,K,3)
     
                 CLOUD_LIQ_SSA( K ) = MAX(MIN(1.0, CLOUD_LIQ_SSA( K )), 0.0)
                 CLOUD_LIQ_EXT( K ) = MAX(CLOUD_LIQ_EXT( K ), 0.0)

                 WRITE(6,'(4(es12.4,1X))')EFFECTIVE_LAMBDA(K),CLOUD_LIQ_EXT( K ),CLOUD_LIQ_ASF(K),
     &                                    CLOUD_LIQ_SSA(K)

               END DO

               DO K = NJO_NEW, 1, -1
!                  K = NJO_NEW - N_INLINE_BAND + I
                   IF ( EFFECTIVE_LAMBDA(K) .LT. WCWVN( 1 ) )THEN
!                IF ( CLOUD_LIQ_SSA( K ) .LE. 1.0E-6 )THEN
                       I_CUTTOFF = K + 1 ! MIN( K + 1, NJO_NEW )
                       EXIT
                  END IF
               END DO
               
!              IF( WRITE_DATA )OPEN(UNIT=DATA_UNIT, FILE='HU_STAMNES_cloud_optics.dat',
!     &                        STATUS='UNKNOWN',ERR=98)

!          IF( READ_DATA )THEN
!
!              filenm   = 'water_clouds/wc.asy'
!              fullname = filenm
!              OPEN(UNIT=iunit,FILE=fullname,FORM='FORMATTED',STATUS='OLD',ERR=99)
!              DO 100 isize = 1, mxsiz
!                 READ(iunit,*) 
!                 READ(iunit,*) 
!                 READ(iunit,*) radbin_lower(isize), radbin_upper(isize)
!                 READ(iunit,*) 
!                 DO 101 ivwc = mxwvwc, 1, -1 ! 1, mxwvwc
!                    READ(iunit,*) wcwvn(ivwc),
!     $                  (cl_asy(isize, ivwc,icof),icof=1,mxcof)
! 101             CONTINUE
!                IF( WRITE_DATA )THEN
!write information as FORTRAN data statements
!                    IF( ISIZE .EQ. 1)THEN
!                       WRITE(DATA_UNIT,3406)
!3406                   FORMAT( /6X, 'DATA WCWVN /' )
!                       DO IVWC = 1, MXWVWC
!                          WREXT_COEFFS( IVWC ) = DBLE(1000.0*WCWVN( IVWC ))
!                       ENDDO
!                       CALL WRBF12D ( DATA_UNIT, 5, MXWVWC, WREXT_COEFFS, 'E' )
!                    ENDIF
!3407                FORMAT( /6X, 'DATA ( CL_ASY( ', I3, ', IVWC, ', I3, ' ), IVWC = 1, MXWVWC ) /' )
!                    DO ICOF = 1, MXCOF!
!1                       WRITE( DATA_UNIT, 3407 )ISIZE,ICOF
!                       DO IVWC = 1, MXWVWC
!                          WREXT_COEFFS( IVWC ) = DBLE(CL_ASY( ISIZE, IVWC, ICOF ))
!                       ENDDO
!                       CALL WRBF12D ( DATA_UNIT, 5, MXWVWC, WREXT_COEFFS, 'E' )
!                    ENDDO
!                ENDIF
! 100         CONTINUE
!            CLOSE(iunit)  
!          ENDIF
       
!          IF( READ_DATA )THEN
!
!             filenm   = 'water_clouds/wc.ext'
!             fullname = filenm
!             OPEN(UNIT=iunit,FILE=fullname,FORM='FORMATTED',STATUS='OLD',
!     $            ERR=99  )
!             DO 110 isize = 1, mxsiz
!                READ(iunit,*) 
!                READ(iunit,*) 
!                READ(iunit,*) radbin_lower(isize), radbin_upper(isize)
!                READ(iunit,*) 
!                DO 111 ivwc = mxwvwc, 1, -1 ! 1, mxwvwc
!                   READ(iunit,*)  wcwvn(ivwc),
!     $                 (cl_ext(isize, ivwc,icof),icof=1,mxcof)
! 111            CONTINUE
!                IF( WRITE_DATA )THEN
!write information as FORTRAN data statements
!3408                FORMAT( /6X, 'DATA ( CL_EXT( ', I3, ', IVWC, ', I3, ' ), IVWC = 1, MXWVWC ) /' )
!                    DO ICOF = 1, MXCOF
!                       WRITE( DATA_UNIT, 3408 )ISIZE,ICOF
!                       DO IVWC = 1, MXWVWC
!                          WREXT_COEFFS( IVWC ) = DBLE(CL_EXT( ISIZE, IVWC, ICOF ))
!                       ENDDO
!                       CALL WRBF12D ( DATA_UNIT, 5, MXWVWC, WREXT_COEFFS, 'E' )
!                    ENDDO
!                 ENDIF 
!110          CONTINUE
!             CLOSE(iunit)  
!          ENDIF
             
!          IF( READ_DATA )THEN
!
!             filenm   = 'water_clouds/wc.ssa'
!             fullname = filenm
!             OPEN(UNIT=iunit,FILE=fullname,FORM='FORMATTED',STATUS='OLD',
!     $            ERR=99  )
!             DO 120 isize = 1, mxsiz
!                READ(iunit,*) 
!                READ(iunit,*) 
!                READ(iunit,*) radbin_lower(isize), radbin_upper(isize)
!                READ(iunit,*) 
!                DO 121 ivwc = mxwvwc, 1, -1 ! 1, mxwvwc
!                   READ(iunit,*)  wcwvn(ivwc),
!     $                 (cl_ssa(isize, ivwc,icof),icof=1,mxcof)
! 121            CONTINUE
!                IF( WRITE_DATA )THEN
!write information as FORTRAN data statements
!3409                FORMAT( /6X, 'DATA ( CL_SSA( ', I3, ', IVWC, ', I3, ' ), IVWC = 1, MXWVWC ) /' )
!                    DO ICOF = 1, MXCOF
!                       WRITE( DATA_UNIT, 3409 )ISIZE,ICOF
!                       DO IVWC = 1, MXWVWC
!                          WREXT_COEFFS( IVWC ) = DBLE(CL_SSA( ISIZE, IVWC, ICOF ))
!                       ENDDO
!                       CALL WRBF12D ( DATA_UNIT, 5, MXWVWC, WREXT_COEFFS, 'E' )
!                    ENDDO
!                 ENDIF 
! 120        CONTINUE
!            CLOSE(iunit)  
!             
!            DO ivwc = 1, mxwvwc         ! Change from microns to nm
!               wcwvn(ivwc) = wcwvn(ivwc) * 1.0E+03 
!            ENDDO
!          ENDIF
    
!          IF( WRITE_DATA )THEN  
!           WRITE(DATA_UNIT,3410)
!3410        FORMAT( /6X, 'DATA RADBIN_LOWER /' )
!            DO ISIZE = 1, MXSIZ
!                WREXT_COEFFS( ISIZE ) = DBLE(RADBIN_LOWER( ISIZE ))
!            ENDDO
!            CALL WRBF12D ( DATA_UNIT, 5, MXSIZ, WREXT_COEFFS, 'E' )
!            WRITE(DATA_UNIT,3410)
!3411        FORMAT( /6X, 'DATA RADBIN_UPPER /' )
!            DO ISIZE = 1, MXSIZ
!                WREXT_COEFFS( ISIZE ) = DBLE(RADBIN_UPPER( ISIZE ))
!            ENDDO
!            CALL WRBF12D ( DATA_UNIT, 5, MXSIZ, WREXT_COEFFS, 'E' )
!            CLOSE(DATA_UNIT)
!          ENDIF


         ENDIF  ! FIRST


         IF(CLOUD_RADIUS_LIQUID .LT. RADBIN_LOWER(1) - 0.01 .OR.
     &      CLOUD_RADIUS_LIQUID .GT. RADBIN_UPPER(MXSIZ) + 0.01)THEN
            WRITE(*,*)'Error, in water cloud parameterization Hu and Stamnes'
            WRITE(*,*)'cloud droplet size = ', CLOUD_RADIUS_LIQUID
            WRITE(*,*)'and is greater than 2.5 um or larger than 60 um. '
            STOP
         ENDIF

         LOOP_SIZE: DO ISIZE = 1, MXSIZ
            IF( CLOUD_RADIUS_LIQUID .GE. RADBIN_LOWER(ISIZE) .AND.
     &          CLOUD_RADIUS_LIQUID .LE. RADBIN_UPPER(ISIZE) )THEN
                EXIT LOOP_SIZE
            ENDIF
         ENDDO LOOP_SIZE

         DO 210 ivwc = 1, mxwvwc

C     Extinction coefficient
     
                 CLOUD_LIQ_EXT(IVWC) = cl_ext(ISIZE,ivwc,1) 
     &                               * CLOUD_RADIUS_LIQUID ** cl_ext(ISIZE,ivwc,2) 
     &                               + cl_ext(ISIZE,ivwc,3)

C     Asymmetry factor
     
                 CLOUD_LIQ_ASF(IVWC) = cl_asy(ISIZE,ivwc,1)
     &                               * CLOUD_RADIUS_LIQUID ** cl_asy(ISIZE,ivwc,2)
     &                               + cl_asy(ISIZE,ivwc,3)
     
C     Single scattering Co-albedo
     
                 CLOUD_LIQ_SSA(IVWC) = real( cl_ssa(ISIZE,ivwc,1), 8)
     &                               * real(CLOUD_RADIUS_LIQUID ** cl_ssa(ISIZE,ivwc,2), 8)
     &                               + real(cl_ssa(ISIZE,ivwc,3), 8)

!         WRITE(6,'(4(es12.4,1X))')wcwvn(ivwc),CLOUD_LIQ_EXT(ivwc),CLOUD_LIQ_ASF(ivwc),CLOUD_LIQ_SSA(ivwc)


210      CONTINUE

! convert CLOUD_LIQ_EXI units from (1/km)*(m**3/g) to (1/m)*(m**3/g)

         CLOUD_LIQ_EXT = 0.001 * CLOUD_LIQ_EXT  

         XDUMB = 1.0
         NDUMB = MXWVWC
         WAVE  = 0.0
         WAVE( 1:NDUMB ) =  WCWVN( 1:NDUMB )

         WC_EXT = 0.0
         WC_ASF = 0.0
         WC_SSA = 0.0

         CALL WVBIN_AVERAGE(WAVE, CLOUD_LIQ_EXT, NDUMB, WAVE, XDUMB, NDUMB, 'P',
     &                      WAVE_OUTL, WAVE_OUTU, MXWLIN, YDUMB, ZDUMB )

         WC_EXT( 1:NJO_NEW ) = YDUMB( 1:NJO_NEW )

         CALL WVBIN_AVERAGE(WAVE, CLOUD_LIQ_ASF, NDUMB, WAVE, XDUMB, NDUMB, 'P',
     &                      WAVE_OUTL, WAVE_OUTU, MXWLIN, YDUMB, ZDUMB )

         WC_ASF( 1:NJO_NEW ) = YDUMB( 1:NJO_NEW )



         CALL WVBIN_AVERAGE(WAVE, CLOUD_LIQ_SSA, NDUMB, WAVE, XDUMB, NDUMB, 'P',
     &                      WAVE_OUTL, WAVE_OUTU, MXWLIN, YDUMB, XDUMB )

         WC_SSA( 1:NJO_NEW ) = YDUMB( 1:NJO_NEW )

               IF( I_CUTTOFF .GT. 0 )THEN
            WRITE(6,'(A, 4(es12.4,1X))')'LOWEST Values:',WAVE_OUTL(I_CUTTOFF),WC_EXT(I_CUTTOFF),
     &      WC_ASF(I_CUTTOFF),WC_SSA(I_CUTTOFF)
                  DO I = 1, I_CUTTOFF-1 
                     wc_ext(I) = wc_ext(I_CUTTOFF)
                     wc_asf(I) = wc_asf(I_CUTTOFF)
                     wc_ssa(I) = wc_ssa(I_CUTTOFF)
                  END DO
               END IF

         IF( I_CUTTOFF .GT. 0 )PRINT*,' CUTTOFF = ',I_CUTTOFF,' at LAMBDA = ',EFFECTIVE_LAMBDA(I_CUTTOFF)
         DO ivwc=1, NJO_NEW
            WRITE(6,'(A, 4(es12.4,1X))')'Result:',WAVE_OUTL(ivwc),WC_EXT(ivwc),
     &      WC_ASF(ivwc),WC_SSA(ivwc)
         END DO

!         pause
         RETURN
          
98      WRITE(6,*)'ERROR opening output file for Hu and Stamnes data'
         STOP

99       WRITE(6,*)'Error during read of file:',fullname
         STOP

       END
